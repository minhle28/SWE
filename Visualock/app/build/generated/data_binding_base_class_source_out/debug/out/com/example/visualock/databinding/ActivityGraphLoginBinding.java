// Generated by view binder compiler. Do not edit!
package com.example.visualock.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.visualock.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGraphLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView LoginCardView;

  @NonNull
  public final TextView forgotPassRedirectText;

  @NonNull
  public final TextView loginByTextual;

  @NonNull
  public final EditText loginEmail;

  @NonNull
  public final Button passwordButton;

  @NonNull
  public final TextView registerRedirectText;

  private ActivityGraphLoginBinding(@NonNull ConstraintLayout rootView,
      @NonNull CardView LoginCardView, @NonNull TextView forgotPassRedirectText,
      @NonNull TextView loginByTextual, @NonNull EditText loginEmail,
      @NonNull Button passwordButton, @NonNull TextView registerRedirectText) {
    this.rootView = rootView;
    this.LoginCardView = LoginCardView;
    this.forgotPassRedirectText = forgotPassRedirectText;
    this.loginByTextual = loginByTextual;
    this.loginEmail = loginEmail;
    this.passwordButton = passwordButton;
    this.registerRedirectText = registerRedirectText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGraphLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGraphLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_graph_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGraphLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.LoginCardView;
      CardView LoginCardView = ViewBindings.findChildViewById(rootView, id);
      if (LoginCardView == null) {
        break missingId;
      }

      id = R.id.forgot_passRedirectText;
      TextView forgotPassRedirectText = ViewBindings.findChildViewById(rootView, id);
      if (forgotPassRedirectText == null) {
        break missingId;
      }

      id = R.id.loginByTextual;
      TextView loginByTextual = ViewBindings.findChildViewById(rootView, id);
      if (loginByTextual == null) {
        break missingId;
      }

      id = R.id.login_email;
      EditText loginEmail = ViewBindings.findChildViewById(rootView, id);
      if (loginEmail == null) {
        break missingId;
      }

      id = R.id.password_button;
      Button passwordButton = ViewBindings.findChildViewById(rootView, id);
      if (passwordButton == null) {
        break missingId;
      }

      id = R.id.registerRedirectText;
      TextView registerRedirectText = ViewBindings.findChildViewById(rootView, id);
      if (registerRedirectText == null) {
        break missingId;
      }

      return new ActivityGraphLoginBinding((ConstraintLayout) rootView, LoginCardView,
          forgotPassRedirectText, loginByTextual, loginEmail, passwordButton, registerRedirectText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
